$sprites: (
  'coffee':
    "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 19 18'%3e%3cg fill='none' fill-rule='evenodd'%3e%3cg transform='translate(-336 -1945)' fill='%231D2230' fill-rule='nonzero'%3e%3cg transform='translate(-10 1916)'%3e%3cg transform='translate(347 30)'%3e%3cpath d='M12.8 6.6h.8a2.2 2.2 0 010 4.4h-.8a1 1 0 000 2h.8a4.2 4.2 0 000-8.4h-.8a1 1 0 000 2z'/%3e%3cpath d='M-1 5.6a1 1 0 011-1h12.8a1 1 0 011 1v7.2A4.2 4.2 0 019.6 17H3.2A4.2 4.2 0 01-1 12.8V5.6zm2 1v6.2A2.2 2.2 0 003.2 15h6.4a2.2 2.2 0 002.2-2.2V6.6H1zM2.2 0v2.4a1 1 0 102 0V0a1 1 0 10-2 0zM5.4 0v2.4a1 1 0 102 0V0a1 1 0 10-2 0zM8.6 0v2.4a1 1 0 102 0V0a1 1 0 00-2 0z'/%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e",
);

$sizes: (
  'coffee': (
    'width': 19px,
    'height': 18px,
  ),
);

$variables: (/* EMPTY */);

// https://github.com/waldemarfm/sass-svg-uri/blob/v1.0.0/_svg-uri.scss
@function sprite-str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if type-of($replace) == 'null' {
    $replace: '';
  }

  @if ($index) {
    @return str-slice($string, 1, $index - 1) + $replace +
      sprite-str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@function sprite-svg-uri($value) {
  $encoded: '';
  $slice: 2000;
  $index: 0;

  @for $i from 1 through ceil(str-length($value) / $slice) {
    $chunk: str-slice($value, $index, $index + $slice - 1);
    $chunk: sprite-str-replace($chunk, '"', "'");
    $chunk: sprite-str-replace($chunk, '<', '%3C');
    $chunk: sprite-str-replace($chunk, '>', '%3E');
    $chunk: sprite-str-replace($chunk, '&', '%26');
    $chunk: sprite-str-replace($chunk, '#', '%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return $encoded;
}

@mixin sprite($name, $user-variables: (), $include-size: false) {
  $sprite: map-get($sprites, $name);

  // Inject variables
  $default-variables: map-get($variables, $name);
  @if type-of($default-variables) == 'map' {
    @each $key, $value in map-merge($default-variables, $user-variables) {
      @if (not map-has-key($default-variables, $key)) {
        @warn 'Sprite \'#{$name}\' does not support variable named \'#{$key}\'';
      }

      $sprite: sprite-str-replace(
        $sprite,
        '___#{$key}___',
        sprite-svg-uri(quote(#{$value}))
      );
    }
  } @else if type-of($user-variables) == 'map' {
    @warn 'Sprite \'#{$name}\' does not contain any variables';
  }

  background: url($sprite) center no-repeat;

  @if $include-size {
    $size: map-get($sizes, $name);
    background-size: map-get($size, width) map-get($size, height);
  }
}
