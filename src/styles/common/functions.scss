/**
 * SCSS functions
 * Author: Graffino (http://www.graffino.com)
 */

/**
 * Variables
 */

// Base font sizes for EM / REM mixins
$base-font-size: 100%;
$base-font-size-px: 16px;

// Generate color themeing for headings
$font-weights: (
  ultraligt: 200,
  light: 300,
  regular: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
  black: 800,
  extrablack: 900
);

$font-colors: (
  white: white,
  black: black,
  primary: $color-primary,
  accent: $color-accent,
  success: $color-success,
  info: $color-info,
  warning: $color-warning,
  danger: $color-danger
);

/**
 * Functions and Mixins
 */

// Convert to REM
@function rem($value) {
  $rem-value: $value / $base-font-size-px;
  @return #{$rem-value}rem;
}

// Convert to EM
@function em($value) {
  $em-value: $value / $base-font-size-px;
  @return #{$em-value}em;
}

// CSS calc() subtract value from 100%
@function calc-100-minus($value) {
  @return calc(100% - #{rem($value)});
}

// CSS calc() subtract value from 100vh
@function calc-100vh-minus($value) {
  @return calc(100vh - #{rem($value)});
}

// CSS calc() add value to 100%
@function calc-100-plus($value) {
  @return calc(100% + #{rem($value)});
}

// CSS calc() substract value from 50%
@function calc-50-minus($value) {
  @return calc(50% - #{rem($value)});
}

/*
 * Font mixin
 */
@mixin webfont(
  $family,
  $file,
  $weight: normal,
  $style: normal,
  $range: 'U+0000-007F'
) {
  @font-face {
    font-display: swap;
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    src: url('../fonts/#{$file}.woff2') format('woff2'),
      url('../fonts/#{$file}.woff') format('woff');
    unicode-range: $range;
  }
}

@mixin clearfix {
  &::after {
    content: '';
    clear: both;
    display: table;
  }
}

@mixin align-x {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin align-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin align-xy {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin font-weights {
  @each $weight, $value in $font-weights {
    &.-font-weight {
      &-#{$weight} {
        font-weight: $value;
      }
    }
  }
}

@mixin font-colors {
  @each $key, $value in $font-colors {
    &.-color-#{$key} {
      color: $value;
    }
  }
}

@mixin link-colors {
  @each $key, $value in $font-colors {
    &.-color-#{$key} {
      color: $value;

      &:hover {
        color: darken($value, 20%);
      }
    }
  }
}

@function transition-custom(
  $property: all,
  $duration: 250ms,
  $ease: cubic-bezier(0.25, 0.46, 0.45, 0.94)
) {
  @return $property $duration $ease;
}
